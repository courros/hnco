# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2016, 2017, 2018, 2019 Arnaud Berny

# This file is part of HNCO.

# HNCO is free software: you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# HNCO is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
# Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with HNCO. If not, see
# <http://www.gnu.org/licenses/>.
VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = test-bm-add-rows$(EXEEXT) test-bm-identity$(EXEEXT) \
	test-bm-invert$(EXEEXT) test-bm-multiply$(EXEEXT) \
	test-bm-rank$(EXEEXT) test-bm-row-column-rank$(EXEEXT) \
	test-bm-solve$(EXEEXT) test-bm-swap-rows$(EXEEXT) \
	test-bv-random$(EXEEXT) test-bv-to-size-type$(EXEEXT) \
	test-complete-search-deceptive-jump$(EXEEXT) \
	test-complete-search-four-peaks$(EXEEXT) \
	test-complete-search-hiff$(EXEEXT) \
	test-complete-search-jump$(EXEEXT) \
	test-complete-search-leading-ones$(EXEEXT) \
	test-complete-search-linear-function$(EXEEXT) \
	test-complete-search-long-path$(EXEEXT) \
	test-complete-search-max-sat$(EXEEXT) \
	test-complete-search-needle$(EXEEXT) \
	test-complete-search-one-max$(EXEEXT) \
	test-complete-search-plateau$(EXEEXT) \
	test-complete-search-ridge$(EXEEXT) \
	test-complete-search-six-peaks$(EXEEXT) \
	test-complete-search-trap$(EXEEXT) \
	test-complete-search-walsh-expansion-1$(EXEEXT) \
	test-first-ascent-hill-climbing$(EXEEXT) \
	test-first-ascent-hill-climbing-local$(EXEEXT) \
	test-hamming-sphere$(EXEEXT) \
	test-hamming-sphere-iterator$(EXEEXT) \
	test-hypercube-iterator$(EXEEXT) \
	test-incremental-linear-function-bernoulli-process$(EXEEXT) \
	test-incremental-negation$(EXEEXT) \
	test-incremental-nn-ising-1$(EXEEXT) \
	test-incremental-nn-ising-2$(EXEEXT) \
	test-incremental-one-max-bernoulli-process$(EXEEXT) \
	test-incremental-one-max-hamming-ball$(EXEEXT) \
	test-incremental-one-max-hamming-sphere$(EXEEXT) \
	test-incremental-one-max-single-bit-flip$(EXEEXT) \
	test-incremental-walsh-expansion-1-bernoulli-process$(EXEEXT) \
	test-injection-projection$(EXEEXT) \
	test-one-plus-one-ea-one-max$(EXEEXT) \
	test-sbm-multiply$(EXEEXT) test-serialize-affine-map$(EXEEXT) \
	test-serialize-equal-products$(EXEEXT) \
	test-serialize-linear-function$(EXEEXT) \
	test-serialize-linear-map$(EXEEXT) \
	test-serialize-map-composition$(EXEEXT) \
	test-serialize-max-sat$(EXEEXT) \
	test-serialize-nk-landscape$(EXEEXT) \
	test-serialize-nn-ising-1$(EXEEXT) \
	test-serialize-nn-ising-2$(EXEEXT) \
	test-serialize-permutation$(EXEEXT) \
	test-serialize-translation$(EXEEXT) \
	test-serialize-ts-affine-map$(EXEEXT) \
	test-serialize-walsh-expansion$(EXEEXT) \
	test-serialize-walsh-expansion-1$(EXEEXT) \
	test-serialize-walsh-expansion-2$(EXEEXT) \
	test-single-bit-flip-iterator$(EXEEXT) \
	test-steepest-ascent-hill-climbing$(EXEEXT) \
	test-steepest-ascent-hill-climbing-local$(EXEEXT) \
	test-translation$(EXEEXT) test-ts-involution$(EXEEXT) \
	test-ts-multiply$(EXEEXT) test-walsh-transform$(EXEEXT) \
	$(am__EXEEXT_1)
@ENABLE_FACTORIZATION_TRUE@am__append_1 = test-complete-search-factorization
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@ENABLE_FACTORIZATION_TRUE@am__EXEEXT_1 = test-complete-search-factorization$(EXEEXT)
am_test_bm_add_rows_OBJECTS = test-bm-add-rows.$(OBJEXT)
test_bm_add_rows_OBJECTS = $(am_test_bm_add_rows_OBJECTS)
test_bm_add_rows_LDADD = $(LDADD)
test_bm_add_rows_DEPENDENCIES = ../lib/libhnco.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_test_bm_identity_OBJECTS = test-bm-identity.$(OBJEXT)
test_bm_identity_OBJECTS = $(am_test_bm_identity_OBJECTS)
test_bm_identity_LDADD = $(LDADD)
test_bm_identity_DEPENDENCIES = ../lib/libhnco.la
am_test_bm_invert_OBJECTS = test-bm-invert.$(OBJEXT)
test_bm_invert_OBJECTS = $(am_test_bm_invert_OBJECTS)
test_bm_invert_LDADD = $(LDADD)
test_bm_invert_DEPENDENCIES = ../lib/libhnco.la
am_test_bm_multiply_OBJECTS = test-bm-multiply.$(OBJEXT)
test_bm_multiply_OBJECTS = $(am_test_bm_multiply_OBJECTS)
test_bm_multiply_LDADD = $(LDADD)
test_bm_multiply_DEPENDENCIES = ../lib/libhnco.la
am_test_bm_rank_OBJECTS = test-bm-rank.$(OBJEXT)
test_bm_rank_OBJECTS = $(am_test_bm_rank_OBJECTS)
test_bm_rank_LDADD = $(LDADD)
test_bm_rank_DEPENDENCIES = ../lib/libhnco.la
am_test_bm_row_column_rank_OBJECTS =  \
	test-bm-row-column-rank.$(OBJEXT)
test_bm_row_column_rank_OBJECTS =  \
	$(am_test_bm_row_column_rank_OBJECTS)
test_bm_row_column_rank_LDADD = $(LDADD)
test_bm_row_column_rank_DEPENDENCIES = ../lib/libhnco.la
am_test_bm_solve_OBJECTS = test-bm-solve.$(OBJEXT)
test_bm_solve_OBJECTS = $(am_test_bm_solve_OBJECTS)
test_bm_solve_LDADD = $(LDADD)
test_bm_solve_DEPENDENCIES = ../lib/libhnco.la
am_test_bm_swap_rows_OBJECTS = test-bm-swap-rows.$(OBJEXT)
test_bm_swap_rows_OBJECTS = $(am_test_bm_swap_rows_OBJECTS)
test_bm_swap_rows_LDADD = $(LDADD)
test_bm_swap_rows_DEPENDENCIES = ../lib/libhnco.la
am_test_bv_random_OBJECTS = test-bv-random.$(OBJEXT)
test_bv_random_OBJECTS = $(am_test_bv_random_OBJECTS)
test_bv_random_LDADD = $(LDADD)
test_bv_random_DEPENDENCIES = ../lib/libhnco.la
am_test_bv_to_size_type_OBJECTS = test-bv-to-size-type.$(OBJEXT)
test_bv_to_size_type_OBJECTS = $(am_test_bv_to_size_type_OBJECTS)
test_bv_to_size_type_LDADD = $(LDADD)
test_bv_to_size_type_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_deceptive_jump_OBJECTS =  \
	test-complete-search-deceptive-jump.$(OBJEXT)
test_complete_search_deceptive_jump_OBJECTS =  \
	$(am_test_complete_search_deceptive_jump_OBJECTS)
test_complete_search_deceptive_jump_LDADD = $(LDADD)
test_complete_search_deceptive_jump_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_factorization_OBJECTS =  \
	test-complete-search-factorization.$(OBJEXT)
test_complete_search_factorization_OBJECTS =  \
	$(am_test_complete_search_factorization_OBJECTS)
test_complete_search_factorization_LDADD = $(LDADD)
test_complete_search_factorization_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_four_peaks_OBJECTS =  \
	test-complete-search-four-peaks.$(OBJEXT)
test_complete_search_four_peaks_OBJECTS =  \
	$(am_test_complete_search_four_peaks_OBJECTS)
test_complete_search_four_peaks_LDADD = $(LDADD)
test_complete_search_four_peaks_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_hiff_OBJECTS =  \
	test-complete-search-hiff.$(OBJEXT)
test_complete_search_hiff_OBJECTS =  \
	$(am_test_complete_search_hiff_OBJECTS)
test_complete_search_hiff_LDADD = $(LDADD)
test_complete_search_hiff_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_jump_OBJECTS =  \
	test-complete-search-jump.$(OBJEXT)
test_complete_search_jump_OBJECTS =  \
	$(am_test_complete_search_jump_OBJECTS)
test_complete_search_jump_LDADD = $(LDADD)
test_complete_search_jump_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_leading_ones_OBJECTS =  \
	test-complete-search-leading-ones.$(OBJEXT)
test_complete_search_leading_ones_OBJECTS =  \
	$(am_test_complete_search_leading_ones_OBJECTS)
test_complete_search_leading_ones_LDADD = $(LDADD)
test_complete_search_leading_ones_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_linear_function_OBJECTS =  \
	test-complete-search-linear-function.$(OBJEXT)
test_complete_search_linear_function_OBJECTS =  \
	$(am_test_complete_search_linear_function_OBJECTS)
test_complete_search_linear_function_LDADD = $(LDADD)
test_complete_search_linear_function_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_long_path_OBJECTS =  \
	test-complete-search-long-path.$(OBJEXT)
test_complete_search_long_path_OBJECTS =  \
	$(am_test_complete_search_long_path_OBJECTS)
test_complete_search_long_path_LDADD = $(LDADD)
test_complete_search_long_path_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_max_sat_OBJECTS =  \
	test-complete-search-max-sat.$(OBJEXT)
test_complete_search_max_sat_OBJECTS =  \
	$(am_test_complete_search_max_sat_OBJECTS)
test_complete_search_max_sat_LDADD = $(LDADD)
test_complete_search_max_sat_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_needle_OBJECTS =  \
	test-complete-search-needle.$(OBJEXT)
test_complete_search_needle_OBJECTS =  \
	$(am_test_complete_search_needle_OBJECTS)
test_complete_search_needle_LDADD = $(LDADD)
test_complete_search_needle_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_one_max_OBJECTS =  \
	test-complete-search-one-max.$(OBJEXT)
test_complete_search_one_max_OBJECTS =  \
	$(am_test_complete_search_one_max_OBJECTS)
test_complete_search_one_max_LDADD = $(LDADD)
test_complete_search_one_max_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_plateau_OBJECTS =  \
	test-complete-search-plateau.$(OBJEXT)
test_complete_search_plateau_OBJECTS =  \
	$(am_test_complete_search_plateau_OBJECTS)
test_complete_search_plateau_LDADD = $(LDADD)
test_complete_search_plateau_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_ridge_OBJECTS =  \
	test-complete-search-ridge.$(OBJEXT)
test_complete_search_ridge_OBJECTS =  \
	$(am_test_complete_search_ridge_OBJECTS)
test_complete_search_ridge_LDADD = $(LDADD)
test_complete_search_ridge_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_six_peaks_OBJECTS =  \
	test-complete-search-six-peaks.$(OBJEXT)
test_complete_search_six_peaks_OBJECTS =  \
	$(am_test_complete_search_six_peaks_OBJECTS)
test_complete_search_six_peaks_LDADD = $(LDADD)
test_complete_search_six_peaks_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_trap_OBJECTS =  \
	test-complete-search-trap.$(OBJEXT)
test_complete_search_trap_OBJECTS =  \
	$(am_test_complete_search_trap_OBJECTS)
test_complete_search_trap_LDADD = $(LDADD)
test_complete_search_trap_DEPENDENCIES = ../lib/libhnco.la
am_test_complete_search_walsh_expansion_1_OBJECTS =  \
	test-complete-search-walsh-expansion-1.$(OBJEXT)
test_complete_search_walsh_expansion_1_OBJECTS =  \
	$(am_test_complete_search_walsh_expansion_1_OBJECTS)
test_complete_search_walsh_expansion_1_LDADD = $(LDADD)
test_complete_search_walsh_expansion_1_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_first_ascent_hill_climbing_OBJECTS =  \
	test-first-ascent-hill-climbing.$(OBJEXT)
test_first_ascent_hill_climbing_OBJECTS =  \
	$(am_test_first_ascent_hill_climbing_OBJECTS)
test_first_ascent_hill_climbing_LDADD = $(LDADD)
test_first_ascent_hill_climbing_DEPENDENCIES = ../lib/libhnco.la
am_test_first_ascent_hill_climbing_local_OBJECTS =  \
	test-first-ascent-hill-climbing-local.$(OBJEXT)
test_first_ascent_hill_climbing_local_OBJECTS =  \
	$(am_test_first_ascent_hill_climbing_local_OBJECTS)
test_first_ascent_hill_climbing_local_LDADD = $(LDADD)
test_first_ascent_hill_climbing_local_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_hamming_sphere_OBJECTS = test-hamming-sphere.$(OBJEXT)
test_hamming_sphere_OBJECTS = $(am_test_hamming_sphere_OBJECTS)
test_hamming_sphere_LDADD = $(LDADD)
test_hamming_sphere_DEPENDENCIES = ../lib/libhnco.la
am_test_hamming_sphere_iterator_OBJECTS =  \
	test-hamming-sphere-iterator.$(OBJEXT)
test_hamming_sphere_iterator_OBJECTS =  \
	$(am_test_hamming_sphere_iterator_OBJECTS)
test_hamming_sphere_iterator_LDADD = $(LDADD)
test_hamming_sphere_iterator_DEPENDENCIES = ../lib/libhnco.la
am_test_hypercube_iterator_OBJECTS =  \
	test-hypercube-iterator.$(OBJEXT)
test_hypercube_iterator_OBJECTS =  \
	$(am_test_hypercube_iterator_OBJECTS)
test_hypercube_iterator_LDADD = $(LDADD)
test_hypercube_iterator_DEPENDENCIES = ../lib/libhnco.la
am_test_incremental_linear_function_bernoulli_process_OBJECTS =  \
	test-incremental-linear-function-bernoulli-process.$(OBJEXT)
test_incremental_linear_function_bernoulli_process_OBJECTS = $(am_test_incremental_linear_function_bernoulli_process_OBJECTS)
test_incremental_linear_function_bernoulli_process_LDADD = $(LDADD)
test_incremental_linear_function_bernoulli_process_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_incremental_negation_OBJECTS =  \
	test-incremental-negation.$(OBJEXT)
test_incremental_negation_OBJECTS =  \
	$(am_test_incremental_negation_OBJECTS)
test_incremental_negation_LDADD = $(LDADD)
test_incremental_negation_DEPENDENCIES = ../lib/libhnco.la
am_test_incremental_nn_ising_1_OBJECTS =  \
	test-incremental-nn-ising-1.$(OBJEXT)
test_incremental_nn_ising_1_OBJECTS =  \
	$(am_test_incremental_nn_ising_1_OBJECTS)
test_incremental_nn_ising_1_LDADD = $(LDADD)
test_incremental_nn_ising_1_DEPENDENCIES = ../lib/libhnco.la
am_test_incremental_nn_ising_2_OBJECTS =  \
	test-incremental-nn-ising-2.$(OBJEXT)
test_incremental_nn_ising_2_OBJECTS =  \
	$(am_test_incremental_nn_ising_2_OBJECTS)
test_incremental_nn_ising_2_LDADD = $(LDADD)
test_incremental_nn_ising_2_DEPENDENCIES = ../lib/libhnco.la
am_test_incremental_one_max_bernoulli_process_OBJECTS =  \
	test-incremental-one-max-bernoulli-process.$(OBJEXT)
test_incremental_one_max_bernoulli_process_OBJECTS =  \
	$(am_test_incremental_one_max_bernoulli_process_OBJECTS)
test_incremental_one_max_bernoulli_process_LDADD = $(LDADD)
test_incremental_one_max_bernoulli_process_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_incremental_one_max_hamming_ball_OBJECTS =  \
	test-incremental-one-max-hamming-ball.$(OBJEXT)
test_incremental_one_max_hamming_ball_OBJECTS =  \
	$(am_test_incremental_one_max_hamming_ball_OBJECTS)
test_incremental_one_max_hamming_ball_LDADD = $(LDADD)
test_incremental_one_max_hamming_ball_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_incremental_one_max_hamming_sphere_OBJECTS =  \
	test-incremental-one-max-hamming-sphere.$(OBJEXT)
test_incremental_one_max_hamming_sphere_OBJECTS =  \
	$(am_test_incremental_one_max_hamming_sphere_OBJECTS)
test_incremental_one_max_hamming_sphere_LDADD = $(LDADD)
test_incremental_one_max_hamming_sphere_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_incremental_one_max_single_bit_flip_OBJECTS =  \
	test-incremental-one-max-single-bit-flip.$(OBJEXT)
test_incremental_one_max_single_bit_flip_OBJECTS =  \
	$(am_test_incremental_one_max_single_bit_flip_OBJECTS)
test_incremental_one_max_single_bit_flip_LDADD = $(LDADD)
test_incremental_one_max_single_bit_flip_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_incremental_walsh_expansion_1_bernoulli_process_OBJECTS = test-incremental-walsh-expansion-1-bernoulli-process.$(OBJEXT)
test_incremental_walsh_expansion_1_bernoulli_process_OBJECTS = $(am_test_incremental_walsh_expansion_1_bernoulli_process_OBJECTS)
test_incremental_walsh_expansion_1_bernoulli_process_LDADD = $(LDADD)
test_incremental_walsh_expansion_1_bernoulli_process_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_injection_projection_OBJECTS =  \
	test-injection-projection.$(OBJEXT)
test_injection_projection_OBJECTS =  \
	$(am_test_injection_projection_OBJECTS)
test_injection_projection_LDADD = $(LDADD)
test_injection_projection_DEPENDENCIES = ../lib/libhnco.la
am_test_one_plus_one_ea_one_max_OBJECTS =  \
	test-one-plus-one-ea-one-max.$(OBJEXT)
test_one_plus_one_ea_one_max_OBJECTS =  \
	$(am_test_one_plus_one_ea_one_max_OBJECTS)
test_one_plus_one_ea_one_max_LDADD = $(LDADD)
test_one_plus_one_ea_one_max_DEPENDENCIES = ../lib/libhnco.la
am_test_sbm_multiply_OBJECTS = test-sbm-multiply.$(OBJEXT)
test_sbm_multiply_OBJECTS = $(am_test_sbm_multiply_OBJECTS)
test_sbm_multiply_LDADD = $(LDADD)
test_sbm_multiply_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_affine_map_OBJECTS =  \
	test-serialize-affine-map.$(OBJEXT)
test_serialize_affine_map_OBJECTS =  \
	$(am_test_serialize_affine_map_OBJECTS)
test_serialize_affine_map_LDADD = $(LDADD)
test_serialize_affine_map_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_equal_products_OBJECTS =  \
	test-serialize-equal-products.$(OBJEXT)
test_serialize_equal_products_OBJECTS =  \
	$(am_test_serialize_equal_products_OBJECTS)
test_serialize_equal_products_LDADD = $(LDADD)
test_serialize_equal_products_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_linear_function_OBJECTS =  \
	test-serialize-linear-function.$(OBJEXT)
test_serialize_linear_function_OBJECTS =  \
	$(am_test_serialize_linear_function_OBJECTS)
test_serialize_linear_function_LDADD = $(LDADD)
test_serialize_linear_function_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_linear_map_OBJECTS =  \
	test-serialize-linear-map.$(OBJEXT)
test_serialize_linear_map_OBJECTS =  \
	$(am_test_serialize_linear_map_OBJECTS)
test_serialize_linear_map_LDADD = $(LDADD)
test_serialize_linear_map_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_map_composition_OBJECTS =  \
	test-serialize-map-composition.$(OBJEXT)
test_serialize_map_composition_OBJECTS =  \
	$(am_test_serialize_map_composition_OBJECTS)
test_serialize_map_composition_LDADD = $(LDADD)
test_serialize_map_composition_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_max_sat_OBJECTS = test-serialize-max-sat.$(OBJEXT)
test_serialize_max_sat_OBJECTS = $(am_test_serialize_max_sat_OBJECTS)
test_serialize_max_sat_LDADD = $(LDADD)
test_serialize_max_sat_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_nk_landscape_OBJECTS =  \
	test-serialize-nk-landscape.$(OBJEXT)
test_serialize_nk_landscape_OBJECTS =  \
	$(am_test_serialize_nk_landscape_OBJECTS)
test_serialize_nk_landscape_LDADD = $(LDADD)
test_serialize_nk_landscape_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_nn_ising_1_OBJECTS =  \
	test-serialize-nn-ising-1.$(OBJEXT)
test_serialize_nn_ising_1_OBJECTS =  \
	$(am_test_serialize_nn_ising_1_OBJECTS)
test_serialize_nn_ising_1_LDADD = $(LDADD)
test_serialize_nn_ising_1_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_nn_ising_2_OBJECTS =  \
	test-serialize-nn-ising-2.$(OBJEXT)
test_serialize_nn_ising_2_OBJECTS =  \
	$(am_test_serialize_nn_ising_2_OBJECTS)
test_serialize_nn_ising_2_LDADD = $(LDADD)
test_serialize_nn_ising_2_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_permutation_OBJECTS =  \
	test-serialize-permutation.$(OBJEXT)
test_serialize_permutation_OBJECTS =  \
	$(am_test_serialize_permutation_OBJECTS)
test_serialize_permutation_LDADD = $(LDADD)
test_serialize_permutation_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_translation_OBJECTS =  \
	test-serialize-translation.$(OBJEXT)
test_serialize_translation_OBJECTS =  \
	$(am_test_serialize_translation_OBJECTS)
test_serialize_translation_LDADD = $(LDADD)
test_serialize_translation_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_ts_affine_map_OBJECTS =  \
	test-serialize-ts-affine-map.$(OBJEXT)
test_serialize_ts_affine_map_OBJECTS =  \
	$(am_test_serialize_ts_affine_map_OBJECTS)
test_serialize_ts_affine_map_LDADD = $(LDADD)
test_serialize_ts_affine_map_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_walsh_expansion_OBJECTS =  \
	test-serialize-walsh-expansion.$(OBJEXT)
test_serialize_walsh_expansion_OBJECTS =  \
	$(am_test_serialize_walsh_expansion_OBJECTS)
test_serialize_walsh_expansion_LDADD = $(LDADD)
test_serialize_walsh_expansion_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_walsh_expansion_1_OBJECTS =  \
	test-serialize-walsh-expansion-1.$(OBJEXT)
test_serialize_walsh_expansion_1_OBJECTS =  \
	$(am_test_serialize_walsh_expansion_1_OBJECTS)
test_serialize_walsh_expansion_1_LDADD = $(LDADD)
test_serialize_walsh_expansion_1_DEPENDENCIES = ../lib/libhnco.la
am_test_serialize_walsh_expansion_2_OBJECTS =  \
	test-serialize-walsh-expansion-2.$(OBJEXT)
test_serialize_walsh_expansion_2_OBJECTS =  \
	$(am_test_serialize_walsh_expansion_2_OBJECTS)
test_serialize_walsh_expansion_2_LDADD = $(LDADD)
test_serialize_walsh_expansion_2_DEPENDENCIES = ../lib/libhnco.la
am_test_single_bit_flip_iterator_OBJECTS =  \
	test-single-bit-flip-iterator.$(OBJEXT)
test_single_bit_flip_iterator_OBJECTS =  \
	$(am_test_single_bit_flip_iterator_OBJECTS)
test_single_bit_flip_iterator_LDADD = $(LDADD)
test_single_bit_flip_iterator_DEPENDENCIES = ../lib/libhnco.la
am_test_steepest_ascent_hill_climbing_OBJECTS =  \
	test-steepest-ascent-hill-climbing.$(OBJEXT)
test_steepest_ascent_hill_climbing_OBJECTS =  \
	$(am_test_steepest_ascent_hill_climbing_OBJECTS)
test_steepest_ascent_hill_climbing_LDADD = $(LDADD)
test_steepest_ascent_hill_climbing_DEPENDENCIES = ../lib/libhnco.la
am_test_steepest_ascent_hill_climbing_local_OBJECTS =  \
	test-steepest-ascent-hill-climbing-local.$(OBJEXT)
test_steepest_ascent_hill_climbing_local_OBJECTS =  \
	$(am_test_steepest_ascent_hill_climbing_local_OBJECTS)
test_steepest_ascent_hill_climbing_local_LDADD = $(LDADD)
test_steepest_ascent_hill_climbing_local_DEPENDENCIES =  \
	../lib/libhnco.la
am_test_translation_OBJECTS = test-translation.$(OBJEXT)
test_translation_OBJECTS = $(am_test_translation_OBJECTS)
test_translation_LDADD = $(LDADD)
test_translation_DEPENDENCIES = ../lib/libhnco.la
am_test_ts_involution_OBJECTS = test-ts-involution.$(OBJEXT)
test_ts_involution_OBJECTS = $(am_test_ts_involution_OBJECTS)
test_ts_involution_LDADD = $(LDADD)
test_ts_involution_DEPENDENCIES = ../lib/libhnco.la
am_test_ts_multiply_OBJECTS = test-ts-multiply.$(OBJEXT)
test_ts_multiply_OBJECTS = $(am_test_ts_multiply_OBJECTS)
test_ts_multiply_LDADD = $(LDADD)
test_ts_multiply_DEPENDENCIES = ../lib/libhnco.la
am_test_walsh_transform_OBJECTS = test-walsh-transform.$(OBJEXT)
test_walsh_transform_OBJECTS = $(am_test_walsh_transform_OBJECTS)
test_walsh_transform_LDADD = $(LDADD)
test_walsh_transform_DEPENDENCIES = ../lib/libhnco.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/test-bm-add-rows.Po \
	./$(DEPDIR)/test-bm-identity.Po ./$(DEPDIR)/test-bm-invert.Po \
	./$(DEPDIR)/test-bm-multiply.Po ./$(DEPDIR)/test-bm-rank.Po \
	./$(DEPDIR)/test-bm-row-column-rank.Po \
	./$(DEPDIR)/test-bm-solve.Po ./$(DEPDIR)/test-bm-swap-rows.Po \
	./$(DEPDIR)/test-bv-random.Po \
	./$(DEPDIR)/test-bv-to-size-type.Po \
	./$(DEPDIR)/test-complete-search-deceptive-jump.Po \
	./$(DEPDIR)/test-complete-search-factorization.Po \
	./$(DEPDIR)/test-complete-search-four-peaks.Po \
	./$(DEPDIR)/test-complete-search-hiff.Po \
	./$(DEPDIR)/test-complete-search-jump.Po \
	./$(DEPDIR)/test-complete-search-leading-ones.Po \
	./$(DEPDIR)/test-complete-search-linear-function.Po \
	./$(DEPDIR)/test-complete-search-long-path.Po \
	./$(DEPDIR)/test-complete-search-max-sat.Po \
	./$(DEPDIR)/test-complete-search-needle.Po \
	./$(DEPDIR)/test-complete-search-one-max.Po \
	./$(DEPDIR)/test-complete-search-plateau.Po \
	./$(DEPDIR)/test-complete-search-ridge.Po \
	./$(DEPDIR)/test-complete-search-six-peaks.Po \
	./$(DEPDIR)/test-complete-search-trap.Po \
	./$(DEPDIR)/test-complete-search-walsh-expansion-1.Po \
	./$(DEPDIR)/test-first-ascent-hill-climbing-local.Po \
	./$(DEPDIR)/test-first-ascent-hill-climbing.Po \
	./$(DEPDIR)/test-hamming-sphere-iterator.Po \
	./$(DEPDIR)/test-hamming-sphere.Po \
	./$(DEPDIR)/test-hypercube-iterator.Po \
	./$(DEPDIR)/test-incremental-linear-function-bernoulli-process.Po \
	./$(DEPDIR)/test-incremental-negation.Po \
	./$(DEPDIR)/test-incremental-nn-ising-1.Po \
	./$(DEPDIR)/test-incremental-nn-ising-2.Po \
	./$(DEPDIR)/test-incremental-one-max-bernoulli-process.Po \
	./$(DEPDIR)/test-incremental-one-max-hamming-ball.Po \
	./$(DEPDIR)/test-incremental-one-max-hamming-sphere.Po \
	./$(DEPDIR)/test-incremental-one-max-single-bit-flip.Po \
	./$(DEPDIR)/test-incremental-walsh-expansion-1-bernoulli-process.Po \
	./$(DEPDIR)/test-injection-projection.Po \
	./$(DEPDIR)/test-one-plus-one-ea-one-max.Po \
	./$(DEPDIR)/test-sbm-multiply.Po \
	./$(DEPDIR)/test-serialize-affine-map.Po \
	./$(DEPDIR)/test-serialize-equal-products.Po \
	./$(DEPDIR)/test-serialize-linear-function.Po \
	./$(DEPDIR)/test-serialize-linear-map.Po \
	./$(DEPDIR)/test-serialize-map-composition.Po \
	./$(DEPDIR)/test-serialize-max-sat.Po \
	./$(DEPDIR)/test-serialize-nk-landscape.Po \
	./$(DEPDIR)/test-serialize-nn-ising-1.Po \
	./$(DEPDIR)/test-serialize-nn-ising-2.Po \
	./$(DEPDIR)/test-serialize-permutation.Po \
	./$(DEPDIR)/test-serialize-translation.Po \
	./$(DEPDIR)/test-serialize-ts-affine-map.Po \
	./$(DEPDIR)/test-serialize-walsh-expansion-1.Po \
	./$(DEPDIR)/test-serialize-walsh-expansion-2.Po \
	./$(DEPDIR)/test-serialize-walsh-expansion.Po \
	./$(DEPDIR)/test-single-bit-flip-iterator.Po \
	./$(DEPDIR)/test-steepest-ascent-hill-climbing-local.Po \
	./$(DEPDIR)/test-steepest-ascent-hill-climbing.Po \
	./$(DEPDIR)/test-translation.Po \
	./$(DEPDIR)/test-ts-involution.Po \
	./$(DEPDIR)/test-ts-multiply.Po \
	./$(DEPDIR)/test-walsh-transform.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(test_bm_add_rows_SOURCES) $(test_bm_identity_SOURCES) \
	$(test_bm_invert_SOURCES) $(test_bm_multiply_SOURCES) \
	$(test_bm_rank_SOURCES) $(test_bm_row_column_rank_SOURCES) \
	$(test_bm_solve_SOURCES) $(test_bm_swap_rows_SOURCES) \
	$(test_bv_random_SOURCES) $(test_bv_to_size_type_SOURCES) \
	$(test_complete_search_deceptive_jump_SOURCES) \
	$(test_complete_search_factorization_SOURCES) \
	$(test_complete_search_four_peaks_SOURCES) \
	$(test_complete_search_hiff_SOURCES) \
	$(test_complete_search_jump_SOURCES) \
	$(test_complete_search_leading_ones_SOURCES) \
	$(test_complete_search_linear_function_SOURCES) \
	$(test_complete_search_long_path_SOURCES) \
	$(test_complete_search_max_sat_SOURCES) \
	$(test_complete_search_needle_SOURCES) \
	$(test_complete_search_one_max_SOURCES) \
	$(test_complete_search_plateau_SOURCES) \
	$(test_complete_search_ridge_SOURCES) \
	$(test_complete_search_six_peaks_SOURCES) \
	$(test_complete_search_trap_SOURCES) \
	$(test_complete_search_walsh_expansion_1_SOURCES) \
	$(test_first_ascent_hill_climbing_SOURCES) \
	$(test_first_ascent_hill_climbing_local_SOURCES) \
	$(test_hamming_sphere_SOURCES) \
	$(test_hamming_sphere_iterator_SOURCES) \
	$(test_hypercube_iterator_SOURCES) \
	$(test_incremental_linear_function_bernoulli_process_SOURCES) \
	$(test_incremental_negation_SOURCES) \
	$(test_incremental_nn_ising_1_SOURCES) \
	$(test_incremental_nn_ising_2_SOURCES) \
	$(test_incremental_one_max_bernoulli_process_SOURCES) \
	$(test_incremental_one_max_hamming_ball_SOURCES) \
	$(test_incremental_one_max_hamming_sphere_SOURCES) \
	$(test_incremental_one_max_single_bit_flip_SOURCES) \
	$(test_incremental_walsh_expansion_1_bernoulli_process_SOURCES) \
	$(test_injection_projection_SOURCES) \
	$(test_one_plus_one_ea_one_max_SOURCES) \
	$(test_sbm_multiply_SOURCES) \
	$(test_serialize_affine_map_SOURCES) \
	$(test_serialize_equal_products_SOURCES) \
	$(test_serialize_linear_function_SOURCES) \
	$(test_serialize_linear_map_SOURCES) \
	$(test_serialize_map_composition_SOURCES) \
	$(test_serialize_max_sat_SOURCES) \
	$(test_serialize_nk_landscape_SOURCES) \
	$(test_serialize_nn_ising_1_SOURCES) \
	$(test_serialize_nn_ising_2_SOURCES) \
	$(test_serialize_permutation_SOURCES) \
	$(test_serialize_translation_SOURCES) \
	$(test_serialize_ts_affine_map_SOURCES) \
	$(test_serialize_walsh_expansion_SOURCES) \
	$(test_serialize_walsh_expansion_1_SOURCES) \
	$(test_serialize_walsh_expansion_2_SOURCES) \
	$(test_single_bit_flip_iterator_SOURCES) \
	$(test_steepest_ascent_hill_climbing_SOURCES) \
	$(test_steepest_ascent_hill_climbing_local_SOURCES) \
	$(test_translation_SOURCES) $(test_ts_involution_SOURCES) \
	$(test_ts_multiply_SOURCES) $(test_walsh_transform_SOURCES)
DIST_SOURCES = $(test_bm_add_rows_SOURCES) $(test_bm_identity_SOURCES) \
	$(test_bm_invert_SOURCES) $(test_bm_multiply_SOURCES) \
	$(test_bm_rank_SOURCES) $(test_bm_row_column_rank_SOURCES) \
	$(test_bm_solve_SOURCES) $(test_bm_swap_rows_SOURCES) \
	$(test_bv_random_SOURCES) $(test_bv_to_size_type_SOURCES) \
	$(test_complete_search_deceptive_jump_SOURCES) \
	$(test_complete_search_factorization_SOURCES) \
	$(test_complete_search_four_peaks_SOURCES) \
	$(test_complete_search_hiff_SOURCES) \
	$(test_complete_search_jump_SOURCES) \
	$(test_complete_search_leading_ones_SOURCES) \
	$(test_complete_search_linear_function_SOURCES) \
	$(test_complete_search_long_path_SOURCES) \
	$(test_complete_search_max_sat_SOURCES) \
	$(test_complete_search_needle_SOURCES) \
	$(test_complete_search_one_max_SOURCES) \
	$(test_complete_search_plateau_SOURCES) \
	$(test_complete_search_ridge_SOURCES) \
	$(test_complete_search_six_peaks_SOURCES) \
	$(test_complete_search_trap_SOURCES) \
	$(test_complete_search_walsh_expansion_1_SOURCES) \
	$(test_first_ascent_hill_climbing_SOURCES) \
	$(test_first_ascent_hill_climbing_local_SOURCES) \
	$(test_hamming_sphere_SOURCES) \
	$(test_hamming_sphere_iterator_SOURCES) \
	$(test_hypercube_iterator_SOURCES) \
	$(test_incremental_linear_function_bernoulli_process_SOURCES) \
	$(test_incremental_negation_SOURCES) \
	$(test_incremental_nn_ising_1_SOURCES) \
	$(test_incremental_nn_ising_2_SOURCES) \
	$(test_incremental_one_max_bernoulli_process_SOURCES) \
	$(test_incremental_one_max_hamming_ball_SOURCES) \
	$(test_incremental_one_max_hamming_sphere_SOURCES) \
	$(test_incremental_one_max_single_bit_flip_SOURCES) \
	$(test_incremental_walsh_expansion_1_bernoulli_process_SOURCES) \
	$(test_injection_projection_SOURCES) \
	$(test_one_plus_one_ea_one_max_SOURCES) \
	$(test_sbm_multiply_SOURCES) \
	$(test_serialize_affine_map_SOURCES) \
	$(test_serialize_equal_products_SOURCES) \
	$(test_serialize_linear_function_SOURCES) \
	$(test_serialize_linear_map_SOURCES) \
	$(test_serialize_map_composition_SOURCES) \
	$(test_serialize_max_sat_SOURCES) \
	$(test_serialize_nk_landscape_SOURCES) \
	$(test_serialize_nn_ising_1_SOURCES) \
	$(test_serialize_nn_ising_2_SOURCES) \
	$(test_serialize_permutation_SOURCES) \
	$(test_serialize_translation_SOURCES) \
	$(test_serialize_ts_affine_map_SOURCES) \
	$(test_serialize_walsh_expansion_SOURCES) \
	$(test_serialize_walsh_expansion_1_SOURCES) \
	$(test_serialize_walsh_expansion_2_SOURCES) \
	$(test_single_bit_flip_iterator_SOURCES) \
	$(test_steepest_ascent_hill_climbing_SOURCES) \
	$(test_steepest_ascent_hill_climbing_local_SOURCES) \
	$(test_translation_SOURCES) $(test_ts_involution_SOURCES) \
	$(test_ts_multiply_SOURCES) $(test_walsh_transform_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_SERIALIZATION_LIB = @BOOST_SERIALIZATION_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_CXX11 = @HAVE_CXX11@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CXXFLAGS = $(OPENMP_CXXFLAGS)
AM_CPPFLAGS = -I $(top_srcdir)/lib
LDADD = ../lib/libhnco.la -ldl -lboost_serialization
test_bm_add_rows_SOURCES = test-bm-add-rows.cc
test_bm_identity_SOURCES = test-bm-identity.cc
test_bm_invert_SOURCES = test-bm-invert.cc
test_bm_multiply_SOURCES = test-bm-multiply.cc
test_bm_rank_SOURCES = test-bm-rank.cc
test_bm_row_column_rank_SOURCES = test-bm-row-column-rank.cc
test_bm_solve_SOURCES = test-bm-solve.cc
test_bm_swap_rows_SOURCES = test-bm-swap-rows.cc
test_bv_random_SOURCES = test-bv-random.cc
test_bv_to_size_type_SOURCES = test-bv-to-size-type.cc
test_complete_search_deceptive_jump_SOURCES = test-complete-search-deceptive-jump.cc
test_complete_search_factorization_SOURCES = test-complete-search-factorization.cc
test_complete_search_four_peaks_SOURCES = test-complete-search-four-peaks.cc
test_complete_search_hiff_SOURCES = test-complete-search-hiff.cc
test_complete_search_jump_SOURCES = test-complete-search-jump.cc
test_complete_search_leading_ones_SOURCES = test-complete-search-leading-ones.cc
test_complete_search_linear_function_SOURCES = test-complete-search-linear-function.cc
test_complete_search_long_path_SOURCES = test-complete-search-long-path.cc
test_complete_search_max_sat_SOURCES = test-complete-search-max-sat.cc
test_complete_search_needle_SOURCES = test-complete-search-needle.cc
test_complete_search_one_max_SOURCES = test-complete-search-one-max.cc
test_complete_search_plateau_SOURCES = test-complete-search-plateau.cc
test_complete_search_ridge_SOURCES = test-complete-search-ridge.cc
test_complete_search_six_peaks_SOURCES = test-complete-search-six-peaks.cc
test_complete_search_trap_SOURCES = test-complete-search-trap.cc
test_complete_search_walsh_expansion_1_SOURCES = test-complete-search-walsh-expansion-1.cc
test_first_ascent_hill_climbing_SOURCES = test-first-ascent-hill-climbing.cc
test_first_ascent_hill_climbing_local_SOURCES = test-first-ascent-hill-climbing-local.cc
test_hamming_sphere_SOURCES = test-hamming-sphere.cc
test_hamming_sphere_iterator_SOURCES = test-hamming-sphere-iterator.cc
test_hypercube_iterator_SOURCES = test-hypercube-iterator.cc
test_incremental_linear_function_bernoulli_process_SOURCES = test-incremental-linear-function-bernoulli-process.cc
test_incremental_negation_SOURCES = test-incremental-negation.cc
test_incremental_nn_ising_1_SOURCES = test-incremental-nn-ising-1.cc
test_incremental_nn_ising_2_SOURCES = test-incremental-nn-ising-2.cc
test_incremental_one_max_bernoulli_process_SOURCES = test-incremental-one-max-bernoulli-process.cc
test_incremental_one_max_hamming_ball_SOURCES = test-incremental-one-max-hamming-ball.cc
test_incremental_one_max_hamming_sphere_SOURCES = test-incremental-one-max-hamming-sphere.cc
test_incremental_one_max_single_bit_flip_SOURCES = test-incremental-one-max-single-bit-flip.cc
test_incremental_walsh_expansion_1_bernoulli_process_SOURCES = test-incremental-walsh-expansion-1-bernoulli-process.cc
test_injection_projection_SOURCES = test-injection-projection.cc
test_one_plus_one_ea_one_max_SOURCES = test-one-plus-one-ea-one-max.cc
test_sbm_multiply_SOURCES = test-sbm-multiply.cc
test_serialize_affine_map_SOURCES = test-serialize-affine-map.cc
test_serialize_equal_products_SOURCES = test-serialize-equal-products.cc
test_serialize_linear_function_SOURCES = test-serialize-linear-function.cc
test_serialize_linear_map_SOURCES = test-serialize-linear-map.cc
test_serialize_map_composition_SOURCES = test-serialize-map-composition.cc
test_serialize_max_sat_SOURCES = test-serialize-max-sat.cc
test_serialize_nk_landscape_SOURCES = test-serialize-nk-landscape.cc
test_serialize_nn_ising_1_SOURCES = test-serialize-nn-ising-1.cc
test_serialize_nn_ising_2_SOURCES = test-serialize-nn-ising-2.cc
test_serialize_permutation_SOURCES = test-serialize-permutation.cc
test_serialize_translation_SOURCES = test-serialize-translation.cc
test_serialize_ts_affine_map_SOURCES = test-serialize-ts-affine-map.cc
test_serialize_walsh_expansion_1_SOURCES = test-serialize-walsh-expansion-1.cc
test_serialize_walsh_expansion_2_SOURCES = test-serialize-walsh-expansion-2.cc
test_serialize_walsh_expansion_SOURCES = test-serialize-walsh-expansion.cc
test_single_bit_flip_iterator_SOURCES = test-single-bit-flip-iterator.cc
test_steepest_ascent_hill_climbing_SOURCES = test-steepest-ascent-hill-climbing.cc
test_steepest_ascent_hill_climbing_local_SOURCES = test-steepest-ascent-hill-climbing-local.cc
test_translation_SOURCES = test-translation.cc
test_ts_involution_SOURCES = test-ts-involution.cc
test_ts_multiply_SOURCES = test-ts-multiply.cc
test_walsh_transform_SOURCES = test-walsh-transform.cc
TESTS = $(check_PROGRAMS)
DISTCLEANFILES = \
	test-serialize-affine-map.txt \
	test-serialize-equal-products.txt \
	test-serialize-linear-function.txt \
	test-serialize-linear-map.txt \
	test-serialize-map-composition.txt \
	test-serialize-max-sat.txt \
	test-serialize-nk-landscape.txt \
	test-serialize-nn-ising-1.txt \
	test-serialize-nn-ising-2.txt \
	test-serialize-permutation.txt \
	test-serialize-translation.txt \
	test-serialize-ts-affine-map.txt \
	test-serialize-walsh-expansion-1.txt \
	test-serialize-walsh-expansion-2.txt \
	test-serialize-walsh-expansion.txt

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test-bm-add-rows$(EXEEXT): $(test_bm_add_rows_OBJECTS) $(test_bm_add_rows_DEPENDENCIES) $(EXTRA_test_bm_add_rows_DEPENDENCIES) 
	@rm -f test-bm-add-rows$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_add_rows_OBJECTS) $(test_bm_add_rows_LDADD) $(LIBS)

test-bm-identity$(EXEEXT): $(test_bm_identity_OBJECTS) $(test_bm_identity_DEPENDENCIES) $(EXTRA_test_bm_identity_DEPENDENCIES) 
	@rm -f test-bm-identity$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_identity_OBJECTS) $(test_bm_identity_LDADD) $(LIBS)

test-bm-invert$(EXEEXT): $(test_bm_invert_OBJECTS) $(test_bm_invert_DEPENDENCIES) $(EXTRA_test_bm_invert_DEPENDENCIES) 
	@rm -f test-bm-invert$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_invert_OBJECTS) $(test_bm_invert_LDADD) $(LIBS)

test-bm-multiply$(EXEEXT): $(test_bm_multiply_OBJECTS) $(test_bm_multiply_DEPENDENCIES) $(EXTRA_test_bm_multiply_DEPENDENCIES) 
	@rm -f test-bm-multiply$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_multiply_OBJECTS) $(test_bm_multiply_LDADD) $(LIBS)

test-bm-rank$(EXEEXT): $(test_bm_rank_OBJECTS) $(test_bm_rank_DEPENDENCIES) $(EXTRA_test_bm_rank_DEPENDENCIES) 
	@rm -f test-bm-rank$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_rank_OBJECTS) $(test_bm_rank_LDADD) $(LIBS)

test-bm-row-column-rank$(EXEEXT): $(test_bm_row_column_rank_OBJECTS) $(test_bm_row_column_rank_DEPENDENCIES) $(EXTRA_test_bm_row_column_rank_DEPENDENCIES) 
	@rm -f test-bm-row-column-rank$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_row_column_rank_OBJECTS) $(test_bm_row_column_rank_LDADD) $(LIBS)

test-bm-solve$(EXEEXT): $(test_bm_solve_OBJECTS) $(test_bm_solve_DEPENDENCIES) $(EXTRA_test_bm_solve_DEPENDENCIES) 
	@rm -f test-bm-solve$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_solve_OBJECTS) $(test_bm_solve_LDADD) $(LIBS)

test-bm-swap-rows$(EXEEXT): $(test_bm_swap_rows_OBJECTS) $(test_bm_swap_rows_DEPENDENCIES) $(EXTRA_test_bm_swap_rows_DEPENDENCIES) 
	@rm -f test-bm-swap-rows$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bm_swap_rows_OBJECTS) $(test_bm_swap_rows_LDADD) $(LIBS)

test-bv-random$(EXEEXT): $(test_bv_random_OBJECTS) $(test_bv_random_DEPENDENCIES) $(EXTRA_test_bv_random_DEPENDENCIES) 
	@rm -f test-bv-random$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bv_random_OBJECTS) $(test_bv_random_LDADD) $(LIBS)

test-bv-to-size-type$(EXEEXT): $(test_bv_to_size_type_OBJECTS) $(test_bv_to_size_type_DEPENDENCIES) $(EXTRA_test_bv_to_size_type_DEPENDENCIES) 
	@rm -f test-bv-to-size-type$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_bv_to_size_type_OBJECTS) $(test_bv_to_size_type_LDADD) $(LIBS)

test-complete-search-deceptive-jump$(EXEEXT): $(test_complete_search_deceptive_jump_OBJECTS) $(test_complete_search_deceptive_jump_DEPENDENCIES) $(EXTRA_test_complete_search_deceptive_jump_DEPENDENCIES) 
	@rm -f test-complete-search-deceptive-jump$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_deceptive_jump_OBJECTS) $(test_complete_search_deceptive_jump_LDADD) $(LIBS)

test-complete-search-factorization$(EXEEXT): $(test_complete_search_factorization_OBJECTS) $(test_complete_search_factorization_DEPENDENCIES) $(EXTRA_test_complete_search_factorization_DEPENDENCIES) 
	@rm -f test-complete-search-factorization$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_factorization_OBJECTS) $(test_complete_search_factorization_LDADD) $(LIBS)

test-complete-search-four-peaks$(EXEEXT): $(test_complete_search_four_peaks_OBJECTS) $(test_complete_search_four_peaks_DEPENDENCIES) $(EXTRA_test_complete_search_four_peaks_DEPENDENCIES) 
	@rm -f test-complete-search-four-peaks$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_four_peaks_OBJECTS) $(test_complete_search_four_peaks_LDADD) $(LIBS)

test-complete-search-hiff$(EXEEXT): $(test_complete_search_hiff_OBJECTS) $(test_complete_search_hiff_DEPENDENCIES) $(EXTRA_test_complete_search_hiff_DEPENDENCIES) 
	@rm -f test-complete-search-hiff$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_hiff_OBJECTS) $(test_complete_search_hiff_LDADD) $(LIBS)

test-complete-search-jump$(EXEEXT): $(test_complete_search_jump_OBJECTS) $(test_complete_search_jump_DEPENDENCIES) $(EXTRA_test_complete_search_jump_DEPENDENCIES) 
	@rm -f test-complete-search-jump$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_jump_OBJECTS) $(test_complete_search_jump_LDADD) $(LIBS)

test-complete-search-leading-ones$(EXEEXT): $(test_complete_search_leading_ones_OBJECTS) $(test_complete_search_leading_ones_DEPENDENCIES) $(EXTRA_test_complete_search_leading_ones_DEPENDENCIES) 
	@rm -f test-complete-search-leading-ones$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_leading_ones_OBJECTS) $(test_complete_search_leading_ones_LDADD) $(LIBS)

test-complete-search-linear-function$(EXEEXT): $(test_complete_search_linear_function_OBJECTS) $(test_complete_search_linear_function_DEPENDENCIES) $(EXTRA_test_complete_search_linear_function_DEPENDENCIES) 
	@rm -f test-complete-search-linear-function$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_linear_function_OBJECTS) $(test_complete_search_linear_function_LDADD) $(LIBS)

test-complete-search-long-path$(EXEEXT): $(test_complete_search_long_path_OBJECTS) $(test_complete_search_long_path_DEPENDENCIES) $(EXTRA_test_complete_search_long_path_DEPENDENCIES) 
	@rm -f test-complete-search-long-path$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_long_path_OBJECTS) $(test_complete_search_long_path_LDADD) $(LIBS)

test-complete-search-max-sat$(EXEEXT): $(test_complete_search_max_sat_OBJECTS) $(test_complete_search_max_sat_DEPENDENCIES) $(EXTRA_test_complete_search_max_sat_DEPENDENCIES) 
	@rm -f test-complete-search-max-sat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_max_sat_OBJECTS) $(test_complete_search_max_sat_LDADD) $(LIBS)

test-complete-search-needle$(EXEEXT): $(test_complete_search_needle_OBJECTS) $(test_complete_search_needle_DEPENDENCIES) $(EXTRA_test_complete_search_needle_DEPENDENCIES) 
	@rm -f test-complete-search-needle$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_needle_OBJECTS) $(test_complete_search_needle_LDADD) $(LIBS)

test-complete-search-one-max$(EXEEXT): $(test_complete_search_one_max_OBJECTS) $(test_complete_search_one_max_DEPENDENCIES) $(EXTRA_test_complete_search_one_max_DEPENDENCIES) 
	@rm -f test-complete-search-one-max$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_one_max_OBJECTS) $(test_complete_search_one_max_LDADD) $(LIBS)

test-complete-search-plateau$(EXEEXT): $(test_complete_search_plateau_OBJECTS) $(test_complete_search_plateau_DEPENDENCIES) $(EXTRA_test_complete_search_plateau_DEPENDENCIES) 
	@rm -f test-complete-search-plateau$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_plateau_OBJECTS) $(test_complete_search_plateau_LDADD) $(LIBS)

test-complete-search-ridge$(EXEEXT): $(test_complete_search_ridge_OBJECTS) $(test_complete_search_ridge_DEPENDENCIES) $(EXTRA_test_complete_search_ridge_DEPENDENCIES) 
	@rm -f test-complete-search-ridge$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_ridge_OBJECTS) $(test_complete_search_ridge_LDADD) $(LIBS)

test-complete-search-six-peaks$(EXEEXT): $(test_complete_search_six_peaks_OBJECTS) $(test_complete_search_six_peaks_DEPENDENCIES) $(EXTRA_test_complete_search_six_peaks_DEPENDENCIES) 
	@rm -f test-complete-search-six-peaks$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_six_peaks_OBJECTS) $(test_complete_search_six_peaks_LDADD) $(LIBS)

test-complete-search-trap$(EXEEXT): $(test_complete_search_trap_OBJECTS) $(test_complete_search_trap_DEPENDENCIES) $(EXTRA_test_complete_search_trap_DEPENDENCIES) 
	@rm -f test-complete-search-trap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_trap_OBJECTS) $(test_complete_search_trap_LDADD) $(LIBS)

test-complete-search-walsh-expansion-1$(EXEEXT): $(test_complete_search_walsh_expansion_1_OBJECTS) $(test_complete_search_walsh_expansion_1_DEPENDENCIES) $(EXTRA_test_complete_search_walsh_expansion_1_DEPENDENCIES) 
	@rm -f test-complete-search-walsh-expansion-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_complete_search_walsh_expansion_1_OBJECTS) $(test_complete_search_walsh_expansion_1_LDADD) $(LIBS)

test-first-ascent-hill-climbing$(EXEEXT): $(test_first_ascent_hill_climbing_OBJECTS) $(test_first_ascent_hill_climbing_DEPENDENCIES) $(EXTRA_test_first_ascent_hill_climbing_DEPENDENCIES) 
	@rm -f test-first-ascent-hill-climbing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_first_ascent_hill_climbing_OBJECTS) $(test_first_ascent_hill_climbing_LDADD) $(LIBS)

test-first-ascent-hill-climbing-local$(EXEEXT): $(test_first_ascent_hill_climbing_local_OBJECTS) $(test_first_ascent_hill_climbing_local_DEPENDENCIES) $(EXTRA_test_first_ascent_hill_climbing_local_DEPENDENCIES) 
	@rm -f test-first-ascent-hill-climbing-local$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_first_ascent_hill_climbing_local_OBJECTS) $(test_first_ascent_hill_climbing_local_LDADD) $(LIBS)

test-hamming-sphere$(EXEEXT): $(test_hamming_sphere_OBJECTS) $(test_hamming_sphere_DEPENDENCIES) $(EXTRA_test_hamming_sphere_DEPENDENCIES) 
	@rm -f test-hamming-sphere$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_hamming_sphere_OBJECTS) $(test_hamming_sphere_LDADD) $(LIBS)

test-hamming-sphere-iterator$(EXEEXT): $(test_hamming_sphere_iterator_OBJECTS) $(test_hamming_sphere_iterator_DEPENDENCIES) $(EXTRA_test_hamming_sphere_iterator_DEPENDENCIES) 
	@rm -f test-hamming-sphere-iterator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_hamming_sphere_iterator_OBJECTS) $(test_hamming_sphere_iterator_LDADD) $(LIBS)

test-hypercube-iterator$(EXEEXT): $(test_hypercube_iterator_OBJECTS) $(test_hypercube_iterator_DEPENDENCIES) $(EXTRA_test_hypercube_iterator_DEPENDENCIES) 
	@rm -f test-hypercube-iterator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_hypercube_iterator_OBJECTS) $(test_hypercube_iterator_LDADD) $(LIBS)

test-incremental-linear-function-bernoulli-process$(EXEEXT): $(test_incremental_linear_function_bernoulli_process_OBJECTS) $(test_incremental_linear_function_bernoulli_process_DEPENDENCIES) $(EXTRA_test_incremental_linear_function_bernoulli_process_DEPENDENCIES) 
	@rm -f test-incremental-linear-function-bernoulli-process$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_linear_function_bernoulli_process_OBJECTS) $(test_incremental_linear_function_bernoulli_process_LDADD) $(LIBS)

test-incremental-negation$(EXEEXT): $(test_incremental_negation_OBJECTS) $(test_incremental_negation_DEPENDENCIES) $(EXTRA_test_incremental_negation_DEPENDENCIES) 
	@rm -f test-incremental-negation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_negation_OBJECTS) $(test_incremental_negation_LDADD) $(LIBS)

test-incremental-nn-ising-1$(EXEEXT): $(test_incremental_nn_ising_1_OBJECTS) $(test_incremental_nn_ising_1_DEPENDENCIES) $(EXTRA_test_incremental_nn_ising_1_DEPENDENCIES) 
	@rm -f test-incremental-nn-ising-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_nn_ising_1_OBJECTS) $(test_incremental_nn_ising_1_LDADD) $(LIBS)

test-incremental-nn-ising-2$(EXEEXT): $(test_incremental_nn_ising_2_OBJECTS) $(test_incremental_nn_ising_2_DEPENDENCIES) $(EXTRA_test_incremental_nn_ising_2_DEPENDENCIES) 
	@rm -f test-incremental-nn-ising-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_nn_ising_2_OBJECTS) $(test_incremental_nn_ising_2_LDADD) $(LIBS)

test-incremental-one-max-bernoulli-process$(EXEEXT): $(test_incremental_one_max_bernoulli_process_OBJECTS) $(test_incremental_one_max_bernoulli_process_DEPENDENCIES) $(EXTRA_test_incremental_one_max_bernoulli_process_DEPENDENCIES) 
	@rm -f test-incremental-one-max-bernoulli-process$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_one_max_bernoulli_process_OBJECTS) $(test_incremental_one_max_bernoulli_process_LDADD) $(LIBS)

test-incremental-one-max-hamming-ball$(EXEEXT): $(test_incremental_one_max_hamming_ball_OBJECTS) $(test_incremental_one_max_hamming_ball_DEPENDENCIES) $(EXTRA_test_incremental_one_max_hamming_ball_DEPENDENCIES) 
	@rm -f test-incremental-one-max-hamming-ball$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_one_max_hamming_ball_OBJECTS) $(test_incremental_one_max_hamming_ball_LDADD) $(LIBS)

test-incremental-one-max-hamming-sphere$(EXEEXT): $(test_incremental_one_max_hamming_sphere_OBJECTS) $(test_incremental_one_max_hamming_sphere_DEPENDENCIES) $(EXTRA_test_incremental_one_max_hamming_sphere_DEPENDENCIES) 
	@rm -f test-incremental-one-max-hamming-sphere$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_one_max_hamming_sphere_OBJECTS) $(test_incremental_one_max_hamming_sphere_LDADD) $(LIBS)

test-incremental-one-max-single-bit-flip$(EXEEXT): $(test_incremental_one_max_single_bit_flip_OBJECTS) $(test_incremental_one_max_single_bit_flip_DEPENDENCIES) $(EXTRA_test_incremental_one_max_single_bit_flip_DEPENDENCIES) 
	@rm -f test-incremental-one-max-single-bit-flip$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_one_max_single_bit_flip_OBJECTS) $(test_incremental_one_max_single_bit_flip_LDADD) $(LIBS)

test-incremental-walsh-expansion-1-bernoulli-process$(EXEEXT): $(test_incremental_walsh_expansion_1_bernoulli_process_OBJECTS) $(test_incremental_walsh_expansion_1_bernoulli_process_DEPENDENCIES) $(EXTRA_test_incremental_walsh_expansion_1_bernoulli_process_DEPENDENCIES) 
	@rm -f test-incremental-walsh-expansion-1-bernoulli-process$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_incremental_walsh_expansion_1_bernoulli_process_OBJECTS) $(test_incremental_walsh_expansion_1_bernoulli_process_LDADD) $(LIBS)

test-injection-projection$(EXEEXT): $(test_injection_projection_OBJECTS) $(test_injection_projection_DEPENDENCIES) $(EXTRA_test_injection_projection_DEPENDENCIES) 
	@rm -f test-injection-projection$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_injection_projection_OBJECTS) $(test_injection_projection_LDADD) $(LIBS)

test-one-plus-one-ea-one-max$(EXEEXT): $(test_one_plus_one_ea_one_max_OBJECTS) $(test_one_plus_one_ea_one_max_DEPENDENCIES) $(EXTRA_test_one_plus_one_ea_one_max_DEPENDENCIES) 
	@rm -f test-one-plus-one-ea-one-max$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_one_plus_one_ea_one_max_OBJECTS) $(test_one_plus_one_ea_one_max_LDADD) $(LIBS)

test-sbm-multiply$(EXEEXT): $(test_sbm_multiply_OBJECTS) $(test_sbm_multiply_DEPENDENCIES) $(EXTRA_test_sbm_multiply_DEPENDENCIES) 
	@rm -f test-sbm-multiply$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_sbm_multiply_OBJECTS) $(test_sbm_multiply_LDADD) $(LIBS)

test-serialize-affine-map$(EXEEXT): $(test_serialize_affine_map_OBJECTS) $(test_serialize_affine_map_DEPENDENCIES) $(EXTRA_test_serialize_affine_map_DEPENDENCIES) 
	@rm -f test-serialize-affine-map$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_affine_map_OBJECTS) $(test_serialize_affine_map_LDADD) $(LIBS)

test-serialize-equal-products$(EXEEXT): $(test_serialize_equal_products_OBJECTS) $(test_serialize_equal_products_DEPENDENCIES) $(EXTRA_test_serialize_equal_products_DEPENDENCIES) 
	@rm -f test-serialize-equal-products$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_equal_products_OBJECTS) $(test_serialize_equal_products_LDADD) $(LIBS)

test-serialize-linear-function$(EXEEXT): $(test_serialize_linear_function_OBJECTS) $(test_serialize_linear_function_DEPENDENCIES) $(EXTRA_test_serialize_linear_function_DEPENDENCIES) 
	@rm -f test-serialize-linear-function$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_linear_function_OBJECTS) $(test_serialize_linear_function_LDADD) $(LIBS)

test-serialize-linear-map$(EXEEXT): $(test_serialize_linear_map_OBJECTS) $(test_serialize_linear_map_DEPENDENCIES) $(EXTRA_test_serialize_linear_map_DEPENDENCIES) 
	@rm -f test-serialize-linear-map$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_linear_map_OBJECTS) $(test_serialize_linear_map_LDADD) $(LIBS)

test-serialize-map-composition$(EXEEXT): $(test_serialize_map_composition_OBJECTS) $(test_serialize_map_composition_DEPENDENCIES) $(EXTRA_test_serialize_map_composition_DEPENDENCIES) 
	@rm -f test-serialize-map-composition$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_map_composition_OBJECTS) $(test_serialize_map_composition_LDADD) $(LIBS)

test-serialize-max-sat$(EXEEXT): $(test_serialize_max_sat_OBJECTS) $(test_serialize_max_sat_DEPENDENCIES) $(EXTRA_test_serialize_max_sat_DEPENDENCIES) 
	@rm -f test-serialize-max-sat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_max_sat_OBJECTS) $(test_serialize_max_sat_LDADD) $(LIBS)

test-serialize-nk-landscape$(EXEEXT): $(test_serialize_nk_landscape_OBJECTS) $(test_serialize_nk_landscape_DEPENDENCIES) $(EXTRA_test_serialize_nk_landscape_DEPENDENCIES) 
	@rm -f test-serialize-nk-landscape$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_nk_landscape_OBJECTS) $(test_serialize_nk_landscape_LDADD) $(LIBS)

test-serialize-nn-ising-1$(EXEEXT): $(test_serialize_nn_ising_1_OBJECTS) $(test_serialize_nn_ising_1_DEPENDENCIES) $(EXTRA_test_serialize_nn_ising_1_DEPENDENCIES) 
	@rm -f test-serialize-nn-ising-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_nn_ising_1_OBJECTS) $(test_serialize_nn_ising_1_LDADD) $(LIBS)

test-serialize-nn-ising-2$(EXEEXT): $(test_serialize_nn_ising_2_OBJECTS) $(test_serialize_nn_ising_2_DEPENDENCIES) $(EXTRA_test_serialize_nn_ising_2_DEPENDENCIES) 
	@rm -f test-serialize-nn-ising-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_nn_ising_2_OBJECTS) $(test_serialize_nn_ising_2_LDADD) $(LIBS)

test-serialize-permutation$(EXEEXT): $(test_serialize_permutation_OBJECTS) $(test_serialize_permutation_DEPENDENCIES) $(EXTRA_test_serialize_permutation_DEPENDENCIES) 
	@rm -f test-serialize-permutation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_permutation_OBJECTS) $(test_serialize_permutation_LDADD) $(LIBS)

test-serialize-translation$(EXEEXT): $(test_serialize_translation_OBJECTS) $(test_serialize_translation_DEPENDENCIES) $(EXTRA_test_serialize_translation_DEPENDENCIES) 
	@rm -f test-serialize-translation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_translation_OBJECTS) $(test_serialize_translation_LDADD) $(LIBS)

test-serialize-ts-affine-map$(EXEEXT): $(test_serialize_ts_affine_map_OBJECTS) $(test_serialize_ts_affine_map_DEPENDENCIES) $(EXTRA_test_serialize_ts_affine_map_DEPENDENCIES) 
	@rm -f test-serialize-ts-affine-map$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_ts_affine_map_OBJECTS) $(test_serialize_ts_affine_map_LDADD) $(LIBS)

test-serialize-walsh-expansion$(EXEEXT): $(test_serialize_walsh_expansion_OBJECTS) $(test_serialize_walsh_expansion_DEPENDENCIES) $(EXTRA_test_serialize_walsh_expansion_DEPENDENCIES) 
	@rm -f test-serialize-walsh-expansion$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_walsh_expansion_OBJECTS) $(test_serialize_walsh_expansion_LDADD) $(LIBS)

test-serialize-walsh-expansion-1$(EXEEXT): $(test_serialize_walsh_expansion_1_OBJECTS) $(test_serialize_walsh_expansion_1_DEPENDENCIES) $(EXTRA_test_serialize_walsh_expansion_1_DEPENDENCIES) 
	@rm -f test-serialize-walsh-expansion-1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_walsh_expansion_1_OBJECTS) $(test_serialize_walsh_expansion_1_LDADD) $(LIBS)

test-serialize-walsh-expansion-2$(EXEEXT): $(test_serialize_walsh_expansion_2_OBJECTS) $(test_serialize_walsh_expansion_2_DEPENDENCIES) $(EXTRA_test_serialize_walsh_expansion_2_DEPENDENCIES) 
	@rm -f test-serialize-walsh-expansion-2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_serialize_walsh_expansion_2_OBJECTS) $(test_serialize_walsh_expansion_2_LDADD) $(LIBS)

test-single-bit-flip-iterator$(EXEEXT): $(test_single_bit_flip_iterator_OBJECTS) $(test_single_bit_flip_iterator_DEPENDENCIES) $(EXTRA_test_single_bit_flip_iterator_DEPENDENCIES) 
	@rm -f test-single-bit-flip-iterator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_single_bit_flip_iterator_OBJECTS) $(test_single_bit_flip_iterator_LDADD) $(LIBS)

test-steepest-ascent-hill-climbing$(EXEEXT): $(test_steepest_ascent_hill_climbing_OBJECTS) $(test_steepest_ascent_hill_climbing_DEPENDENCIES) $(EXTRA_test_steepest_ascent_hill_climbing_DEPENDENCIES) 
	@rm -f test-steepest-ascent-hill-climbing$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_steepest_ascent_hill_climbing_OBJECTS) $(test_steepest_ascent_hill_climbing_LDADD) $(LIBS)

test-steepest-ascent-hill-climbing-local$(EXEEXT): $(test_steepest_ascent_hill_climbing_local_OBJECTS) $(test_steepest_ascent_hill_climbing_local_DEPENDENCIES) $(EXTRA_test_steepest_ascent_hill_climbing_local_DEPENDENCIES) 
	@rm -f test-steepest-ascent-hill-climbing-local$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_steepest_ascent_hill_climbing_local_OBJECTS) $(test_steepest_ascent_hill_climbing_local_LDADD) $(LIBS)

test-translation$(EXEEXT): $(test_translation_OBJECTS) $(test_translation_DEPENDENCIES) $(EXTRA_test_translation_DEPENDENCIES) 
	@rm -f test-translation$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_translation_OBJECTS) $(test_translation_LDADD) $(LIBS)

test-ts-involution$(EXEEXT): $(test_ts_involution_OBJECTS) $(test_ts_involution_DEPENDENCIES) $(EXTRA_test_ts_involution_DEPENDENCIES) 
	@rm -f test-ts-involution$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ts_involution_OBJECTS) $(test_ts_involution_LDADD) $(LIBS)

test-ts-multiply$(EXEEXT): $(test_ts_multiply_OBJECTS) $(test_ts_multiply_DEPENDENCIES) $(EXTRA_test_ts_multiply_DEPENDENCIES) 
	@rm -f test-ts-multiply$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ts_multiply_OBJECTS) $(test_ts_multiply_LDADD) $(LIBS)

test-walsh-transform$(EXEEXT): $(test_walsh_transform_OBJECTS) $(test_walsh_transform_DEPENDENCIES) $(EXTRA_test_walsh_transform_DEPENDENCIES) 
	@rm -f test-walsh-transform$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_walsh_transform_OBJECTS) $(test_walsh_transform_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-add-rows.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-identity.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-invert.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-multiply.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-rank.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-row-column-rank.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-solve.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bm-swap-rows.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bv-random.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-bv-to-size-type.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-deceptive-jump.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-factorization.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-four-peaks.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-hiff.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-jump.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-leading-ones.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-linear-function.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-long-path.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-max-sat.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-needle.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-one-max.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-plateau.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-ridge.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-six-peaks.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-trap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-complete-search-walsh-expansion-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-first-ascent-hill-climbing-local.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-first-ascent-hill-climbing.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-hamming-sphere-iterator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-hamming-sphere.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-hypercube-iterator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-linear-function-bernoulli-process.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-negation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-nn-ising-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-nn-ising-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-one-max-bernoulli-process.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-one-max-hamming-ball.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-one-max-hamming-sphere.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-one-max-single-bit-flip.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-incremental-walsh-expansion-1-bernoulli-process.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-injection-projection.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-one-plus-one-ea-one-max.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-sbm-multiply.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-affine-map.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-equal-products.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-linear-function.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-linear-map.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-map-composition.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-max-sat.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-nk-landscape.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-nn-ising-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-nn-ising-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-permutation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-translation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-ts-affine-map.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-walsh-expansion-1.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-walsh-expansion-2.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-serialize-walsh-expansion.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-single-bit-flip-iterator.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-steepest-ascent-hill-climbing-local.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-steepest-ascent-hill-climbing.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-translation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ts-involution.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-ts-multiply.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-walsh-transform.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test-bm-add-rows.log: test-bm-add-rows$(EXEEXT)
	@p='test-bm-add-rows$(EXEEXT)'; \
	b='test-bm-add-rows'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-identity.log: test-bm-identity$(EXEEXT)
	@p='test-bm-identity$(EXEEXT)'; \
	b='test-bm-identity'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-invert.log: test-bm-invert$(EXEEXT)
	@p='test-bm-invert$(EXEEXT)'; \
	b='test-bm-invert'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-multiply.log: test-bm-multiply$(EXEEXT)
	@p='test-bm-multiply$(EXEEXT)'; \
	b='test-bm-multiply'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-rank.log: test-bm-rank$(EXEEXT)
	@p='test-bm-rank$(EXEEXT)'; \
	b='test-bm-rank'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-row-column-rank.log: test-bm-row-column-rank$(EXEEXT)
	@p='test-bm-row-column-rank$(EXEEXT)'; \
	b='test-bm-row-column-rank'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-solve.log: test-bm-solve$(EXEEXT)
	@p='test-bm-solve$(EXEEXT)'; \
	b='test-bm-solve'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bm-swap-rows.log: test-bm-swap-rows$(EXEEXT)
	@p='test-bm-swap-rows$(EXEEXT)'; \
	b='test-bm-swap-rows'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bv-random.log: test-bv-random$(EXEEXT)
	@p='test-bv-random$(EXEEXT)'; \
	b='test-bv-random'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bv-to-size-type.log: test-bv-to-size-type$(EXEEXT)
	@p='test-bv-to-size-type$(EXEEXT)'; \
	b='test-bv-to-size-type'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-deceptive-jump.log: test-complete-search-deceptive-jump$(EXEEXT)
	@p='test-complete-search-deceptive-jump$(EXEEXT)'; \
	b='test-complete-search-deceptive-jump'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-four-peaks.log: test-complete-search-four-peaks$(EXEEXT)
	@p='test-complete-search-four-peaks$(EXEEXT)'; \
	b='test-complete-search-four-peaks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-hiff.log: test-complete-search-hiff$(EXEEXT)
	@p='test-complete-search-hiff$(EXEEXT)'; \
	b='test-complete-search-hiff'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-jump.log: test-complete-search-jump$(EXEEXT)
	@p='test-complete-search-jump$(EXEEXT)'; \
	b='test-complete-search-jump'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-leading-ones.log: test-complete-search-leading-ones$(EXEEXT)
	@p='test-complete-search-leading-ones$(EXEEXT)'; \
	b='test-complete-search-leading-ones'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-linear-function.log: test-complete-search-linear-function$(EXEEXT)
	@p='test-complete-search-linear-function$(EXEEXT)'; \
	b='test-complete-search-linear-function'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-long-path.log: test-complete-search-long-path$(EXEEXT)
	@p='test-complete-search-long-path$(EXEEXT)'; \
	b='test-complete-search-long-path'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-max-sat.log: test-complete-search-max-sat$(EXEEXT)
	@p='test-complete-search-max-sat$(EXEEXT)'; \
	b='test-complete-search-max-sat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-needle.log: test-complete-search-needle$(EXEEXT)
	@p='test-complete-search-needle$(EXEEXT)'; \
	b='test-complete-search-needle'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-one-max.log: test-complete-search-one-max$(EXEEXT)
	@p='test-complete-search-one-max$(EXEEXT)'; \
	b='test-complete-search-one-max'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-plateau.log: test-complete-search-plateau$(EXEEXT)
	@p='test-complete-search-plateau$(EXEEXT)'; \
	b='test-complete-search-plateau'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-ridge.log: test-complete-search-ridge$(EXEEXT)
	@p='test-complete-search-ridge$(EXEEXT)'; \
	b='test-complete-search-ridge'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-six-peaks.log: test-complete-search-six-peaks$(EXEEXT)
	@p='test-complete-search-six-peaks$(EXEEXT)'; \
	b='test-complete-search-six-peaks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-trap.log: test-complete-search-trap$(EXEEXT)
	@p='test-complete-search-trap$(EXEEXT)'; \
	b='test-complete-search-trap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-walsh-expansion-1.log: test-complete-search-walsh-expansion-1$(EXEEXT)
	@p='test-complete-search-walsh-expansion-1$(EXEEXT)'; \
	b='test-complete-search-walsh-expansion-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-first-ascent-hill-climbing.log: test-first-ascent-hill-climbing$(EXEEXT)
	@p='test-first-ascent-hill-climbing$(EXEEXT)'; \
	b='test-first-ascent-hill-climbing'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-first-ascent-hill-climbing-local.log: test-first-ascent-hill-climbing-local$(EXEEXT)
	@p='test-first-ascent-hill-climbing-local$(EXEEXT)'; \
	b='test-first-ascent-hill-climbing-local'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-hamming-sphere.log: test-hamming-sphere$(EXEEXT)
	@p='test-hamming-sphere$(EXEEXT)'; \
	b='test-hamming-sphere'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-hamming-sphere-iterator.log: test-hamming-sphere-iterator$(EXEEXT)
	@p='test-hamming-sphere-iterator$(EXEEXT)'; \
	b='test-hamming-sphere-iterator'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-hypercube-iterator.log: test-hypercube-iterator$(EXEEXT)
	@p='test-hypercube-iterator$(EXEEXT)'; \
	b='test-hypercube-iterator'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-linear-function-bernoulli-process.log: test-incremental-linear-function-bernoulli-process$(EXEEXT)
	@p='test-incremental-linear-function-bernoulli-process$(EXEEXT)'; \
	b='test-incremental-linear-function-bernoulli-process'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-negation.log: test-incremental-negation$(EXEEXT)
	@p='test-incremental-negation$(EXEEXT)'; \
	b='test-incremental-negation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-nn-ising-1.log: test-incremental-nn-ising-1$(EXEEXT)
	@p='test-incremental-nn-ising-1$(EXEEXT)'; \
	b='test-incremental-nn-ising-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-nn-ising-2.log: test-incremental-nn-ising-2$(EXEEXT)
	@p='test-incremental-nn-ising-2$(EXEEXT)'; \
	b='test-incremental-nn-ising-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-one-max-bernoulli-process.log: test-incremental-one-max-bernoulli-process$(EXEEXT)
	@p='test-incremental-one-max-bernoulli-process$(EXEEXT)'; \
	b='test-incremental-one-max-bernoulli-process'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-one-max-hamming-ball.log: test-incremental-one-max-hamming-ball$(EXEEXT)
	@p='test-incremental-one-max-hamming-ball$(EXEEXT)'; \
	b='test-incremental-one-max-hamming-ball'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-one-max-hamming-sphere.log: test-incremental-one-max-hamming-sphere$(EXEEXT)
	@p='test-incremental-one-max-hamming-sphere$(EXEEXT)'; \
	b='test-incremental-one-max-hamming-sphere'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-one-max-single-bit-flip.log: test-incremental-one-max-single-bit-flip$(EXEEXT)
	@p='test-incremental-one-max-single-bit-flip$(EXEEXT)'; \
	b='test-incremental-one-max-single-bit-flip'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-incremental-walsh-expansion-1-bernoulli-process.log: test-incremental-walsh-expansion-1-bernoulli-process$(EXEEXT)
	@p='test-incremental-walsh-expansion-1-bernoulli-process$(EXEEXT)'; \
	b='test-incremental-walsh-expansion-1-bernoulli-process'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-injection-projection.log: test-injection-projection$(EXEEXT)
	@p='test-injection-projection$(EXEEXT)'; \
	b='test-injection-projection'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-one-plus-one-ea-one-max.log: test-one-plus-one-ea-one-max$(EXEEXT)
	@p='test-one-plus-one-ea-one-max$(EXEEXT)'; \
	b='test-one-plus-one-ea-one-max'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-sbm-multiply.log: test-sbm-multiply$(EXEEXT)
	@p='test-sbm-multiply$(EXEEXT)'; \
	b='test-sbm-multiply'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-affine-map.log: test-serialize-affine-map$(EXEEXT)
	@p='test-serialize-affine-map$(EXEEXT)'; \
	b='test-serialize-affine-map'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-equal-products.log: test-serialize-equal-products$(EXEEXT)
	@p='test-serialize-equal-products$(EXEEXT)'; \
	b='test-serialize-equal-products'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-linear-function.log: test-serialize-linear-function$(EXEEXT)
	@p='test-serialize-linear-function$(EXEEXT)'; \
	b='test-serialize-linear-function'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-linear-map.log: test-serialize-linear-map$(EXEEXT)
	@p='test-serialize-linear-map$(EXEEXT)'; \
	b='test-serialize-linear-map'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-map-composition.log: test-serialize-map-composition$(EXEEXT)
	@p='test-serialize-map-composition$(EXEEXT)'; \
	b='test-serialize-map-composition'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-max-sat.log: test-serialize-max-sat$(EXEEXT)
	@p='test-serialize-max-sat$(EXEEXT)'; \
	b='test-serialize-max-sat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-nk-landscape.log: test-serialize-nk-landscape$(EXEEXT)
	@p='test-serialize-nk-landscape$(EXEEXT)'; \
	b='test-serialize-nk-landscape'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-nn-ising-1.log: test-serialize-nn-ising-1$(EXEEXT)
	@p='test-serialize-nn-ising-1$(EXEEXT)'; \
	b='test-serialize-nn-ising-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-nn-ising-2.log: test-serialize-nn-ising-2$(EXEEXT)
	@p='test-serialize-nn-ising-2$(EXEEXT)'; \
	b='test-serialize-nn-ising-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-permutation.log: test-serialize-permutation$(EXEEXT)
	@p='test-serialize-permutation$(EXEEXT)'; \
	b='test-serialize-permutation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-translation.log: test-serialize-translation$(EXEEXT)
	@p='test-serialize-translation$(EXEEXT)'; \
	b='test-serialize-translation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-ts-affine-map.log: test-serialize-ts-affine-map$(EXEEXT)
	@p='test-serialize-ts-affine-map$(EXEEXT)'; \
	b='test-serialize-ts-affine-map'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-walsh-expansion.log: test-serialize-walsh-expansion$(EXEEXT)
	@p='test-serialize-walsh-expansion$(EXEEXT)'; \
	b='test-serialize-walsh-expansion'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-walsh-expansion-1.log: test-serialize-walsh-expansion-1$(EXEEXT)
	@p='test-serialize-walsh-expansion-1$(EXEEXT)'; \
	b='test-serialize-walsh-expansion-1'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-serialize-walsh-expansion-2.log: test-serialize-walsh-expansion-2$(EXEEXT)
	@p='test-serialize-walsh-expansion-2$(EXEEXT)'; \
	b='test-serialize-walsh-expansion-2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-single-bit-flip-iterator.log: test-single-bit-flip-iterator$(EXEEXT)
	@p='test-single-bit-flip-iterator$(EXEEXT)'; \
	b='test-single-bit-flip-iterator'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-steepest-ascent-hill-climbing.log: test-steepest-ascent-hill-climbing$(EXEEXT)
	@p='test-steepest-ascent-hill-climbing$(EXEEXT)'; \
	b='test-steepest-ascent-hill-climbing'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-steepest-ascent-hill-climbing-local.log: test-steepest-ascent-hill-climbing-local$(EXEEXT)
	@p='test-steepest-ascent-hill-climbing-local$(EXEEXT)'; \
	b='test-steepest-ascent-hill-climbing-local'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-translation.log: test-translation$(EXEEXT)
	@p='test-translation$(EXEEXT)'; \
	b='test-translation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-ts-involution.log: test-ts-involution$(EXEEXT)
	@p='test-ts-involution$(EXEEXT)'; \
	b='test-ts-involution'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-ts-multiply.log: test-ts-multiply$(EXEEXT)
	@p='test-ts-multiply$(EXEEXT)'; \
	b='test-ts-multiply'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-walsh-transform.log: test-walsh-transform$(EXEEXT)
	@p='test-walsh-transform$(EXEEXT)'; \
	b='test-walsh-transform'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-complete-search-factorization.log: test-complete-search-factorization$(EXEEXT)
	@p='test-complete-search-factorization$(EXEEXT)'; \
	b='test-complete-search-factorization'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/test-bm-add-rows.Po
	-rm -f ./$(DEPDIR)/test-bm-identity.Po
	-rm -f ./$(DEPDIR)/test-bm-invert.Po
	-rm -f ./$(DEPDIR)/test-bm-multiply.Po
	-rm -f ./$(DEPDIR)/test-bm-rank.Po
	-rm -f ./$(DEPDIR)/test-bm-row-column-rank.Po
	-rm -f ./$(DEPDIR)/test-bm-solve.Po
	-rm -f ./$(DEPDIR)/test-bm-swap-rows.Po
	-rm -f ./$(DEPDIR)/test-bv-random.Po
	-rm -f ./$(DEPDIR)/test-bv-to-size-type.Po
	-rm -f ./$(DEPDIR)/test-complete-search-deceptive-jump.Po
	-rm -f ./$(DEPDIR)/test-complete-search-factorization.Po
	-rm -f ./$(DEPDIR)/test-complete-search-four-peaks.Po
	-rm -f ./$(DEPDIR)/test-complete-search-hiff.Po
	-rm -f ./$(DEPDIR)/test-complete-search-jump.Po
	-rm -f ./$(DEPDIR)/test-complete-search-leading-ones.Po
	-rm -f ./$(DEPDIR)/test-complete-search-linear-function.Po
	-rm -f ./$(DEPDIR)/test-complete-search-long-path.Po
	-rm -f ./$(DEPDIR)/test-complete-search-max-sat.Po
	-rm -f ./$(DEPDIR)/test-complete-search-needle.Po
	-rm -f ./$(DEPDIR)/test-complete-search-one-max.Po
	-rm -f ./$(DEPDIR)/test-complete-search-plateau.Po
	-rm -f ./$(DEPDIR)/test-complete-search-ridge.Po
	-rm -f ./$(DEPDIR)/test-complete-search-six-peaks.Po
	-rm -f ./$(DEPDIR)/test-complete-search-trap.Po
	-rm -f ./$(DEPDIR)/test-complete-search-walsh-expansion-1.Po
	-rm -f ./$(DEPDIR)/test-first-ascent-hill-climbing-local.Po
	-rm -f ./$(DEPDIR)/test-first-ascent-hill-climbing.Po
	-rm -f ./$(DEPDIR)/test-hamming-sphere-iterator.Po
	-rm -f ./$(DEPDIR)/test-hamming-sphere.Po
	-rm -f ./$(DEPDIR)/test-hypercube-iterator.Po
	-rm -f ./$(DEPDIR)/test-incremental-linear-function-bernoulli-process.Po
	-rm -f ./$(DEPDIR)/test-incremental-negation.Po
	-rm -f ./$(DEPDIR)/test-incremental-nn-ising-1.Po
	-rm -f ./$(DEPDIR)/test-incremental-nn-ising-2.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-bernoulli-process.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-hamming-ball.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-hamming-sphere.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-single-bit-flip.Po
	-rm -f ./$(DEPDIR)/test-incremental-walsh-expansion-1-bernoulli-process.Po
	-rm -f ./$(DEPDIR)/test-injection-projection.Po
	-rm -f ./$(DEPDIR)/test-one-plus-one-ea-one-max.Po
	-rm -f ./$(DEPDIR)/test-sbm-multiply.Po
	-rm -f ./$(DEPDIR)/test-serialize-affine-map.Po
	-rm -f ./$(DEPDIR)/test-serialize-equal-products.Po
	-rm -f ./$(DEPDIR)/test-serialize-linear-function.Po
	-rm -f ./$(DEPDIR)/test-serialize-linear-map.Po
	-rm -f ./$(DEPDIR)/test-serialize-map-composition.Po
	-rm -f ./$(DEPDIR)/test-serialize-max-sat.Po
	-rm -f ./$(DEPDIR)/test-serialize-nk-landscape.Po
	-rm -f ./$(DEPDIR)/test-serialize-nn-ising-1.Po
	-rm -f ./$(DEPDIR)/test-serialize-nn-ising-2.Po
	-rm -f ./$(DEPDIR)/test-serialize-permutation.Po
	-rm -f ./$(DEPDIR)/test-serialize-translation.Po
	-rm -f ./$(DEPDIR)/test-serialize-ts-affine-map.Po
	-rm -f ./$(DEPDIR)/test-serialize-walsh-expansion-1.Po
	-rm -f ./$(DEPDIR)/test-serialize-walsh-expansion-2.Po
	-rm -f ./$(DEPDIR)/test-serialize-walsh-expansion.Po
	-rm -f ./$(DEPDIR)/test-single-bit-flip-iterator.Po
	-rm -f ./$(DEPDIR)/test-steepest-ascent-hill-climbing-local.Po
	-rm -f ./$(DEPDIR)/test-steepest-ascent-hill-climbing.Po
	-rm -f ./$(DEPDIR)/test-translation.Po
	-rm -f ./$(DEPDIR)/test-ts-involution.Po
	-rm -f ./$(DEPDIR)/test-ts-multiply.Po
	-rm -f ./$(DEPDIR)/test-walsh-transform.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/test-bm-add-rows.Po
	-rm -f ./$(DEPDIR)/test-bm-identity.Po
	-rm -f ./$(DEPDIR)/test-bm-invert.Po
	-rm -f ./$(DEPDIR)/test-bm-multiply.Po
	-rm -f ./$(DEPDIR)/test-bm-rank.Po
	-rm -f ./$(DEPDIR)/test-bm-row-column-rank.Po
	-rm -f ./$(DEPDIR)/test-bm-solve.Po
	-rm -f ./$(DEPDIR)/test-bm-swap-rows.Po
	-rm -f ./$(DEPDIR)/test-bv-random.Po
	-rm -f ./$(DEPDIR)/test-bv-to-size-type.Po
	-rm -f ./$(DEPDIR)/test-complete-search-deceptive-jump.Po
	-rm -f ./$(DEPDIR)/test-complete-search-factorization.Po
	-rm -f ./$(DEPDIR)/test-complete-search-four-peaks.Po
	-rm -f ./$(DEPDIR)/test-complete-search-hiff.Po
	-rm -f ./$(DEPDIR)/test-complete-search-jump.Po
	-rm -f ./$(DEPDIR)/test-complete-search-leading-ones.Po
	-rm -f ./$(DEPDIR)/test-complete-search-linear-function.Po
	-rm -f ./$(DEPDIR)/test-complete-search-long-path.Po
	-rm -f ./$(DEPDIR)/test-complete-search-max-sat.Po
	-rm -f ./$(DEPDIR)/test-complete-search-needle.Po
	-rm -f ./$(DEPDIR)/test-complete-search-one-max.Po
	-rm -f ./$(DEPDIR)/test-complete-search-plateau.Po
	-rm -f ./$(DEPDIR)/test-complete-search-ridge.Po
	-rm -f ./$(DEPDIR)/test-complete-search-six-peaks.Po
	-rm -f ./$(DEPDIR)/test-complete-search-trap.Po
	-rm -f ./$(DEPDIR)/test-complete-search-walsh-expansion-1.Po
	-rm -f ./$(DEPDIR)/test-first-ascent-hill-climbing-local.Po
	-rm -f ./$(DEPDIR)/test-first-ascent-hill-climbing.Po
	-rm -f ./$(DEPDIR)/test-hamming-sphere-iterator.Po
	-rm -f ./$(DEPDIR)/test-hamming-sphere.Po
	-rm -f ./$(DEPDIR)/test-hypercube-iterator.Po
	-rm -f ./$(DEPDIR)/test-incremental-linear-function-bernoulli-process.Po
	-rm -f ./$(DEPDIR)/test-incremental-negation.Po
	-rm -f ./$(DEPDIR)/test-incremental-nn-ising-1.Po
	-rm -f ./$(DEPDIR)/test-incremental-nn-ising-2.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-bernoulli-process.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-hamming-ball.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-hamming-sphere.Po
	-rm -f ./$(DEPDIR)/test-incremental-one-max-single-bit-flip.Po
	-rm -f ./$(DEPDIR)/test-incremental-walsh-expansion-1-bernoulli-process.Po
	-rm -f ./$(DEPDIR)/test-injection-projection.Po
	-rm -f ./$(DEPDIR)/test-one-plus-one-ea-one-max.Po
	-rm -f ./$(DEPDIR)/test-sbm-multiply.Po
	-rm -f ./$(DEPDIR)/test-serialize-affine-map.Po
	-rm -f ./$(DEPDIR)/test-serialize-equal-products.Po
	-rm -f ./$(DEPDIR)/test-serialize-linear-function.Po
	-rm -f ./$(DEPDIR)/test-serialize-linear-map.Po
	-rm -f ./$(DEPDIR)/test-serialize-map-composition.Po
	-rm -f ./$(DEPDIR)/test-serialize-max-sat.Po
	-rm -f ./$(DEPDIR)/test-serialize-nk-landscape.Po
	-rm -f ./$(DEPDIR)/test-serialize-nn-ising-1.Po
	-rm -f ./$(DEPDIR)/test-serialize-nn-ising-2.Po
	-rm -f ./$(DEPDIR)/test-serialize-permutation.Po
	-rm -f ./$(DEPDIR)/test-serialize-translation.Po
	-rm -f ./$(DEPDIR)/test-serialize-ts-affine-map.Po
	-rm -f ./$(DEPDIR)/test-serialize-walsh-expansion-1.Po
	-rm -f ./$(DEPDIR)/test-serialize-walsh-expansion-2.Po
	-rm -f ./$(DEPDIR)/test-serialize-walsh-expansion.Po
	-rm -f ./$(DEPDIR)/test-single-bit-flip-iterator.Po
	-rm -f ./$(DEPDIR)/test-steepest-ascent-hill-climbing-local.Po
	-rm -f ./$(DEPDIR)/test-steepest-ascent-hill-climbing.Po
	-rm -f ./$(DEPDIR)/test-translation.Po
	-rm -f ./$(DEPDIR)/test-ts-involution.Po
	-rm -f ./$(DEPDIR)/test-ts-multiply.Po
	-rm -f ./$(DEPDIR)/test-walsh-transform.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-generic clean-libtool \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
