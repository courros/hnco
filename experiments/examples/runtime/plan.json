{
    "exec": "hnco",
    "opt": "--print-results --stop-on-maximum",
    "budget": 0,

    "num_runs": 20,
    "parallel": true,

    "parameter": {
        "id": "bv-size",
        "label": "Bit vector size",
        "values_perl": "map { 100 + 100 * $_ } (0 .. 19)"
    },

    "graphics": {
        "mean": {
            "title": true,
            "logscale": false
        },
        "stddev": {
            "title": true,
            "logscale": false
        },
        "candlesticks": {
            "title": true,
            "logscale": false,
            "boxwidth": 40
        }
    },

    "functions": [

        {
            "id": "one-max",
            "label": "OneMax",
	    "opt": "-F 0 --incremental-evaluation",

            "mean_gnuplot": [

                {
                    "expression": "f(x) = exp(1) * (x + 1/2) * log(x) - 1.8925417883 * x",
                    "label": "Theory (1+1) EA"
                }

            ],

            "stddev_gnuplot": [

                {
                    "expression": "f(x) = sqrt(pi**2 / 6 * (exp(1) * x)**2 - (2 * exp(1) + 1) * exp(1) * x * log(x))",
                    "label": "Theory (1+1) EA"
                }

            ]

        },

        {
            "id": "leading-ones",
            "label": "LeadingOnes",
	    "opt": "-F 10",

            "mean_gnuplot": [

                {
                    "expression": "f(x) = (exp(1) - 1) / 2 * x**2",
                    "label": "Theory (1+1) EA"
                }

            ],

            "stddev_gnuplot": [

                {
                    "expression": "f(x) = sqrt((exp(2) - 1) / 8 * x**3 + (-3 * exp(2) - 8 * exp(1) + 17) / 16 * x**2)",
                    "label": "Theory (1+1) EA"
                }

            ]

        }

    ],

    "algorithms": [

        {
            "id": "ea-1p1",
            "label": "(1+1) EA",
	    "opt": "-A 300 --ea-allow-no-mutation"
        },

        {
            "id": "rls",
            "label": "RLS",
	    "opt": "-A 100 --rls-patience 0"
        }

    ]

}
